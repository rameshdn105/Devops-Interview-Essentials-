pipeline {
    agent any
    environment {
        VERSION = "1.0.0-${env.GIT_COMMIT.substring(0, 7)}"
        DB_HOST = credentials('DB_HOST')
        DB_NAME = "your_database_name"
        DB_USER = credentials('DB_USER')
        DB_PASS = credentials('DB_PASS')
        SONAR_TOKEN = credentials('SONAR_TOKEN')
        SONAR_HOST_URL = credentials('SONAR_HOST_URL')
        JFROG_USER = credentials('JFROG_USER')
        JFROG_PASS = credentials('JFROG_PASS')
        AWS_ACCESS_KEY_ID = credentials('AWS_ACCESS_KEY_ID')
        AWS_SECRET_ACCESS_KEY = credentials('AWS_SECRET_ACCESS_KEY')
        AWS_REGION = "us-west-2"
        ECR_REGISTRY = credentials('AWS_ECR_REGISTRY')
        ECR_REPOSITORY = credentials('AWS_ECR_REPO')
    }
    stages {
        stage('Checkout Code') {
            steps {
                checkout scm
            }
        }

        stage('Setup JDK') {
            steps {
                sh 'export JAVA_HOME=/usr/lib/jvm/java-17-openjdk && java -version'
            }
        }

        stage('Build with Maven') {
            steps {
                sh '''
                cd project_code
                mvn clean install
                ls target
                echo "Database: $DB_NAME"
                '''
            }
        }

        stage('SonarQube Scan') {
            steps {
                sh '''
                sonar-scanner -Dsonar.projectKey=shyam -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_TOKEN
                '''
            }
        }

        stage('Upload Artifact to JFrog') {
            steps {
                sh '''
                curl -u $JFROG_USER:$JFROG_PASS -X PUT "http://18.116.72.114:8081/artifactory/generic-local/Ramesh/debitcard/debitcardapp.${VERSION}.war" -T project_code/target/*.war
                '''
            }
        }

        stage('Upload to AWS S3') {
            steps {
                sh '''
                aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
                aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
                aws configure set region $AWS_REGION
                aws s3 cp project_code/target/*.war s3://pipeline-shyam/Github_Pipeline/debitcardapp-${VERSION}.war
                '''
            }
        }

        stage('Docker Build & Push to ECR') {
            steps {
                sh '''
                TIMESTAMP=$(date +'%Y-%m-%d-%H-%M')
                IMAGE_TAG=${GIT_COMMIT:0:7}-$TIMESTAMP
                $(aws ecr get-login --no-include-email --region $AWS_REGION)
                docker build -t debitcardapp:$IMAGE_TAG .
                docker tag debitcardapp:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
                docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
                '''
            }
        }
    }
}
