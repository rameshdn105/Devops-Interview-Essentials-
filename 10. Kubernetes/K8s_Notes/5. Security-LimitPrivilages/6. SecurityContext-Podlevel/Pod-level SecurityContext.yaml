apiVersion: v1
kind: Pod
metadata:
  name: secure-pod
  labels:
    app: secure-app
  annotations:
    container.apparmor.security.beta.kubernetes.io/secure-container: "runtime/default"
    pod-security.kubernetes.io/warn: baseline
    pod-security.kubernetes.io/enforce: baseline
    pod-security.kubernetes.io/audit: baseline
spec:
  securityContext:
    runAsUser: 1000
    runAsGroup: 1000
    fsGroup: 2000
    seccompProfile:
      type: RuntimeDefault
  volumes:
    - name: aws-secrets
      csi:
        driver: secrets-store.csi.k8s.io
        readOnly: true
        volumeAttributes:
          secretProviderClass: "aws-secrets"
  containers:
    - name: secure-container
      image: secure-app:latest
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
      resources:
        limits:
          cpu: "500m"
          memory: "512Mi"
        requests:
          cpu: "250m"
          memory: "256Mi"
      volumeMounts:
        - name: aws-secrets
          mountPath: "/mnt/secrets-store"
          readOnly: true
      env:
        - name: AWS_SECRET
          valueFrom:
            secretKeyRef:
              name: aws-secret
              key: secret-key
  nodeSelector:
    kubernetes.io/os: linux
  tolerations:
    - key: "node-role.kubernetes.io/master"
      effect: "NoSchedule"
  restartPolicy: Always
  securityContext:
    seccompProfile:
      type: RuntimeDefault
  podSecurityContext:
    runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 1000
    fsGroup: 2000

# In the configuration file, the runAsUser field specifies that for any Containers in the Pod, all processes run with user ID 1000. The runAsGroup field specifies the primary group ID of 3000 for all processes within any containers of the Pod. If this field is omitted, the primary group ID of the containers will be root(0). Any files created will also be owned by user 1000 and group 3000 when runAsGroup is specified. Since fsGroup field is specified, all processes of the container are also part of the supplementary group ID 2000. The owner for volume /data/demo and any files created in that volume will be Group ID 2000. Additionally, when the supplementalGroups field is specified, all processes of the container are also part of the specified groups. If this field is omitted, it means empty.
