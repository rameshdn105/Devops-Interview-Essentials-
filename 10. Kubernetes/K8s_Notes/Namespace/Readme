In Kubernetes, ResourceQuotas are used to limit the total amount of resources that can be consumed by all the objects (like Pods, Services, etc.) within a particular namespace. This helps administrators ensure that no single namespace consumes more resources than the cluster can handle and helps manage resource usage within the cluster.

A ResourceQuota defines constraints on the amount of CPU, memory, number of Pods, and other resources that a namespace can use. It can be applied to various resource types, such as:

CPU and memory requests and limits
Number of Pods, Services, and Persistent Volume Claims (PVCs)
Number of ConfigMaps, Secrets, etc.


Resource Types You Can Limit with ResourceQuota:
Hereâ€™s a list of common resources you can limit using a ResourceQuota:

CPU and Memory:

requests.cpu: Total CPU requested across all Pods in the namespace.
requests.memory: Total memory requested across all Pods in the namespace.
limits.cpu: Total CPU limit across all Pods in the namespace.
limits.memory: Total memory limit across all Pods in the namespace.
Count Limits:

pods: Number of Pods allowed in the namespace.
services: Number of Services allowed in the namespace.
secrets: Number of Secrets allowed in the namespace.
configmaps: Number of ConfigMaps allowed in the namespace.
persistentvolumeclaims: Number of PersistentVolumeClaims allowed in the namespace.
replicationcontrollers: Number of ReplicationControllers allowed in the namespace.
deployments: Number of Deployments allowed in the namespace.
statefulsets: Number of StatefulSets allowed in the namespace.